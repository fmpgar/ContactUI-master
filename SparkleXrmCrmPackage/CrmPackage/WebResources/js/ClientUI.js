// ClientUI.js
(function($){
Type.registerNamespace('ClientUI.Model');ClientUI.Model.Contact=function(){ClientUI.Model.Contact.initializeBase(this,['contact']);this._metaData['creditlimit']=SparkleXrm.Sdk.AttributeTypes.money;}
ClientUI.Model.Contact.prototype={contactid:null,parentcustomerid:null,creditlimit:null,firstname:null,fullname:null,lastname:null,preferredcontactmethodcode:null}
Type.registerNamespace('ClientUI');ResourceStrings=function(){}
Type.registerNamespace('ClientUI.ViewModel');ClientUI.ViewModel.ContactViewModel=function(){this.AllowAddNew=ko.observable(true);ClientUI.ViewModel.ContactViewModel.initializeBase(this);var $0=new ClientUI.ViewModel.ObservableContact();this.contacts=new SparkleXrm.GridEditor.EntityDataViewModel(15,ClientUI.Model.Contact,false);this.ContactEdit=ko.validatedObservable($0);this.ContactEdit().add_onSaveComplete(ss.Delegate.create(this,this.$1_3));this.ErrorMessage=ko.observable();this.contacts.onDataLoaded.subscribe(ss.Delegate.create(this,this.$1_1));ClientUI.ViewModel.ObservableContact.registerValidation(this.contacts.validationBinder);}
ClientUI.ViewModel.ContactViewModel.getAccountId=function(){var $0='';if(window.parent.Xrm.Page.ui!=null){var $1=window.parent.Xrm.Page.data.entity.getId();if($1!=null){$0=$1.replaceAll('{','').replaceAll('}','');}}return $0;}
ClientUI.ViewModel.ContactViewModel.prototype={contacts:null,$1_0:10,ErrorMessage:null,ContactEdit:null,$1_1:function($p0,$p1){var $0=$p1;for(var $1=0;$1<$0.to+1;$1++){var $2=this.contacts.getItem($1);if($2==null){return;}$2.add_propertyChanged(ss.Delegate.create(this,this.$1_2));}},$1_2:function($p0,$p1){var $0=$p0;if(String.isNullOrEmpty($0.lastname)){this.ErrorMessage(String.format('{0} {1}',ResourceStrings.LastName,ResourceStrings.RequiredMessage));}else{SparkleXrm.Sdk.OrganizationServiceProxy.beginUpdate($0,ss.Delegate.create(this,function($p1_0){
try{SparkleXrm.Sdk.OrganizationServiceProxy.update($0);this.ErrorMessage(null);}catch($1_0){this.ErrorMessage($1_0.message);}finally{}}));}},$1_3:function($p0){if($p0==null){this.ErrorMessage(null);this.contacts.reset();this.contacts.refresh();}else{this.ErrorMessage($p0);}},search:function(){this.contacts.set_fetchXml("<fetch version='1.0' output-format='xml-platform' mapping='logical'  returntotalrecordcount='true' no-lock='true' distinct='false' count='{0}' paging-cookie='{1}' page='{2}'>\r\n                                            <entity name='contact'>\r\n                                            <attribute name='firstname' />\r\n                                            <attribute name='lastname' />\r\n                                            <attribute name='preferredcontactmethodcode' />\r\n                                            <attribute name='creditlimit' />                                            \r\n                                            <attribute name='contactid' />\r\n                                            <attribute name='parentcustomerid' />\r\n                                            <order attribute='fullname' descending='false' />\r\n                                      <filter>\r\n                                        <condition attribute='parentcustomerid' operator='eq' value='"+ClientUI.ViewModel.ContactViewModel.getAccountId()+"' />\r\n                                       </filter>   \r\n                                            {3}\r\n                                            </entity>\r\n                                        </fetch>");},AddNewCommand:function(){this.ContactEdit().AddNewVisible(true);}}
ClientUI.ViewModel.ObservableContact=function(){this.AddNewVisible=ko.observable(false);this.contactid=ko.observable();this.parentcustomerid=ko.observable();this.creditlimit=ko.observable();this.firstname=ko.observable();this.fullname=ko.observable();this.lastname=ko.observable();this.preferredcontactmethodcode=ko.observable();ClientUI.ViewModel.ObservableContact.initializeBase(this);ClientUI.ViewModel.ObservableContact.registerValidation(new SparkleXrm.ObservableValidationBinder(this));}
ClientUI.ViewModel.ObservableContact.validateLastName=function(rules,viewModel,dataContext){return rules.addRequiredMsg(ResourceStrings.RequiredMessage);}
ClientUI.ViewModel.ObservableContact.registerValidation=function(binder){binder.register('lastname',ClientUI.ViewModel.ObservableContact.validateLastName);}
ClientUI.ViewModel.ObservableContact.prototype={add_onSaveComplete:function(value){this.$1_0=ss.Delegate.combine(this.$1_0,value);},remove_onSaveComplete:function(value){this.$1_0=ss.Delegate.remove(this.$1_0,value);},$1_0:null,CancelCommand:function(){this.AddNewVisible(false);},SaveCommand:function(){var $0=(this).isValid();if(!$0){(this).errors.showAllMessages(true);return;}this.isBusy(true);var $1=new ClientUI.Model.Contact();var $2='';if(window.parent.Xrm.Page.ui!=null){var $3=window.parent.Xrm.Page.data.entity.getId();if($3!=null){$2=$3.replaceAll('{','').replaceAll('}','');}}$1.parentcustomerid=new SparkleXrm.Sdk.EntityReference(new SparkleXrm.Sdk.Guid($2),'account',null);$1.creditlimit=this.creditlimit();$1.firstname=this.firstname();$1.lastname=this.lastname();$1.preferredcontactmethodcode=this.preferredcontactmethodcode();SparkleXrm.Sdk.OrganizationServiceProxy.beginCreate($1,ss.Delegate.create(this,function($p1_0){
try{this.contactid(SparkleXrm.Sdk.OrganizationServiceProxy.endCreate($p1_0));this.$1_0(null);(this).errors.showAllMessages(false);}catch($1_0){this.$1_0($1_0.message);}finally{this.isBusy(false);this.AddNewVisible(false);}}));},OpenAssociatedSubGridCommand:function(){var $0=window.parent.Xrm.Page.ui.navigation.items.get('navContacts');$0.setFocus();},contactSearchCommand:function(account,callback){var $0=String.format("<fetch version='1.0' output-format='xml-platform' mapping='logical' distinct='false'>\r\n                                          <entity name='contact'>\r\n                                            <attribute name='fullname' />\r\n                                            <attribute name='telephone1' />\r\n                                            <attribute name='contactid' />\r\n                                            <order attribute='fullname' descending='false' />\r\n                                            <filter type='and'>\r\n                                              <condition attribute='parentcustomerid' operator='eq' uiname='A. Datum' uitype='account' value='{0}' />\r\n                                            </filter>\r\n                                          </entity>\r\n                                        </fetch>",SparkleXrm.Sdk.Guid.empty);SparkleXrm.Sdk.OrganizationServiceProxy.beginRetrieveMultiple($0,function($p1_0){
var $1_0=SparkleXrm.Sdk.OrganizationServiceProxy.endRetrieveMultiple($p1_0,SparkleXrm.Sdk.Entity);callback($1_0);});}}
Type.registerNamespace('ClientUI.View');ClientUI.View.ContactView=function(){}
ClientUI.View.ContactView.Init=function(){ClientUI.View.ContactView.vm=new ClientUI.ViewModel.ContactViewModel();var $0=[];SparkleXrm.GridEditor.GridDataViewBinder.addEditIndicatorColumn($0);SparkleXrm.GridEditor.XrmTextEditor.bindColumn(SparkleXrm.GridEditor.GridDataViewBinder.addColumn($0,ResourceStrings.FirstName,200,'firstname'));SparkleXrm.GridEditor.XrmTextEditor.bindColumn(SparkleXrm.GridEditor.GridDataViewBinder.addColumn($0,ResourceStrings.LastName,200,'lastname'));SparkleXrm.GridEditor.XrmOptionSetEditor.bindColumn(SparkleXrm.GridEditor.GridDataViewBinder.addColumn($0,ResourceStrings.PreferredContactType,200,'preferredcontactmethodcode'),'contact','preferredcontactmethodcode',false);SparkleXrm.GridEditor.XrmMoneyEditor.bindColumn(SparkleXrm.GridEditor.GridDataViewBinder.addColumn($0,ResourceStrings.CreditLimit,200,'creditlimit'),-1000,100000000);var $1=new SparkleXrm.GridEditor.GridDataViewBinder();var $2=$1.dataBindXrmGrid(ClientUI.View.ContactView.vm.contacts,$0,'container','pager',true,true);$1.bindCommitEdit(ClientUI.View.ContactView.vm);SparkleXrm.ViewBase.registerViewModel(ClientUI.View.ContactView.vm);window.setTimeout(function(){
ClientUI.View.ContactView.vm.search();ClientUI.View.ContactView.vm.contacts.refresh();},0);}
ClientUI.Model.Contact.registerClass('ClientUI.Model.Contact',SparkleXrm.Sdk.Entity);ResourceStrings.registerClass('ResourceStrings');ClientUI.ViewModel.ContactViewModel.registerClass('ClientUI.ViewModel.ContactViewModel',SparkleXrm.ViewModelBase);ClientUI.ViewModel.ObservableContact.registerClass('ClientUI.ViewModel.ObservableContact',SparkleXrm.ViewModelBase);ClientUI.View.ContactView.registerClass('ClientUI.View.ContactView');ResourceStrings.RequiredMessage=(SparkleXrm.Sdk.OrganizationServiceProxy.getUserSettings().uilanguageid===3082)?'Requerido':'Required';ResourceStrings.SaveButton=(SparkleXrm.Sdk.OrganizationServiceProxy.getUserSettings().uilanguageid===3082)?'Guardar':'Save';ResourceStrings.CancelButton=(SparkleXrm.Sdk.OrganizationServiceProxy.getUserSettings().uilanguageid===3082)?'Cancelar':'Cancel';ResourceStrings.Contacts=(SparkleXrm.Sdk.OrganizationServiceProxy.getUserSettings().uilanguageid===3082)?'Contacto':'Contacts';ResourceStrings.FirstName=(SparkleXrm.Sdk.OrganizationServiceProxy.getUserSettings().uilanguageid===3082)?'Nombre':'First Name';ResourceStrings.LastName=(SparkleXrm.Sdk.OrganizationServiceProxy.getUserSettings().uilanguageid===3082)?'Apellido':'Last Name';ResourceStrings.CreditLimit=(SparkleXrm.Sdk.OrganizationServiceProxy.getUserSettings().uilanguageid===3082)?'Limite de credito':'Credit Limit';ResourceStrings.PreferredContactType=(SparkleXrm.Sdk.OrganizationServiceProxy.getUserSettings().uilanguageid===3082)?'Metodo de contacto':'Preferred Contact Method';ClientUI.View.ContactView.vm=null;ClientUI.View.ContactView.contactsGrid=null;ClientUI.View.ContactView.currentUserSettings=null;})(window.xrmjQuery);